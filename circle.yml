machine:
  services:
    - docker
  post:
    - mkdir -p download
    - test -e download/$GODIST || curl -o download/$GODIST https://storage.googleapis.com/golang/$GODIST
    - sudo rm -rf /usr/local/go
    - sudo tar -C /usr/local -xzf download/$GODIST
  environment:
    GODIST: "go1.8.linux-amd64.tar.gz"
    IMPORT_PATH: "go.mozilla.org/tigerblood"
    GWS: "$HOME/.go_workspace"
    TIGERBLOOD_DSN: "user=tigerblood dbname=tigerblood sslmode=disable"
dependencies:
  cache_directories:
    - "~/docker"
  pre:
    - if [[ -e ~/docker/image.tar ]]; then docker load -i ~/docker/image.tar; fi
    - sudo docker build -f postgres.Dockerfile -t postgres-ip4r .
    - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
    - "docker tag -f postgres-ip4r ${DOCKERHUB_POSTGRES_REPO}:latest"
    - "docker push ${DOCKERHUB_POSTGRES_REPO}:latest"
    - mkdir -p ~/docker; docker save ${DOCKERHUB_POSTGRES_REPO} > ~/docker/image.tar
    - mkdir -p "$GWS/src/$IMPORT_PATH/"
    - cp -rf ./ "$GWS/src/$IMPORT_PATH/"
    - >
      printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n'
      "$CIRCLE_SHA1"
      "$CIRCLE_TAG"
      "$CIRCLE_PROJECT_USERNAME"
      "$CIRCLE_PROJECT_REPONAME"
      "$CIRCLE_BUILD_URL" > version.json
    - cp version.json $CIRCLE_ARTIFACTS
    - go get -d
    - cd cmd/tigerblood && go get -d
    - CGO_ENABLED=0 go build --ldflags '-extldflags "-static"' ./cmd/tigerblood/
    - docker build -t "app:build" .
    - test -e $CIRCLE_ARTIFACTS/bin || mkdir -p $CIRCLE_ARTIFACTS/bin
    - cp tigerblood $CIRCLE_ARTIFACTS/bin/tigerblood-linux-amd64-$CIRCLE_SHA1
database:
  override:
    - if [[ -e ~/docker/image.tar ]]; then docker load -i ~/docker/image.tar; fi
    - sudo service postgresql stop
    - sudo docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r
    - chmod +x ./wait-for-it.sh
    - ./wait-for-it.sh 127.0.0.1:5432
    - echo "CREATE ROLE tigerblood WITH LOGIN; CREATE DATABASE tigerblood; GRANT ALL PRIVILEGES ON DATABASE tigerblood TO tigerblood;" | psql -h 127.0.0.1 -U postgres
    - echo "CREATE EXTENSION ip4r;" | psql -h 127.0.0.1 -U postgres tigerblood
test:
  override:
    - go test . -bench=. -coverprofile=coverage.txt -covermode=atomic
  post:
    - bash <(curl -s https://codecov.io/bash)
deployment:
  hub_latest:
    branch: master
    commands:
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker tag app:build ${DOCKERHUB_REPO}:latest
      - docker push ${DOCKERHUB_REPO}:latest

  hub_releases:
    tag: /.*/
    commands:
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker tag app:build ${DOCKERHUB_REPO}:${CIRCLE_TAG}
      - docker push ${DOCKERHUB_REPO}:${CIRCLE_TAG}

  # push any releases candidate branches to DockerHub
  hub_release_candidates:
    branch: /rc_.*/
    commands:
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker tag app:build ${DOCKERHUB_REPO}:${CIRCLE_BRANCH}
      - docker push ${DOCKERHUB_REPO}:${CIRCLE_BRANCH}
